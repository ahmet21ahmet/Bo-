# Workflow'un adı
name: spor Updater

# Bu workflow'u neyin tetikleyeceğini belirler
on:
  schedule:
    # Her 2 saatte bir otomatik olarak çalışmasını sağlar
    - cron: '0 */2 * * *'
  # GitHub arayüzünden manuel olarak da çalıştırma imkanı sunar
  workflow_dispatch:

# Yapılacak işleri tanımlar
jobs:
  build-and-commit:
    # İşin çalışacağı sanal makine türü
    runs-on: ubuntu-latest

    # --- DÜZELTME BURADA ---
    # Bu bölüm, workflow'a depoya kod gönderme (yazma) izni verir.
    permissions:
      contents: write

    # İşin adımları
    steps:
      # 1. Adım: Depodaki kodları sanal makineye kopyalar
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Adım: Python 3.10'u kurar
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Adım: Gerekli Python kütüphanelerini kurar
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Adım: Veri çekme script'ini çalıştırır
      - name: Run scraper to generate playlist
        run: python scraper.py

      # 5. Adım: Oluşturulan dosyayı depoya kaydeder (commit) ve gönderir (push)
      - name: Commit and push if there are changes
        run: |
          # Git için bot kimliğini ayarla
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Oluşturulan playlist.m3u dosyasını takip et
          git add playlist.m3u
          
          # Eğer bir değişiklik varsa commit at, yoksa hiçbir şey yapma
          git diff --staged --quiet || git commit -m "Update M3U playlist"
          
          # Değişiklikleri ana branch'e gönder
          git push